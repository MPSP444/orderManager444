"""
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –º–æ–¥—É–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞–º–∏ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
"""

from PyQt5.QtWidgets import QPushButton
from PyQt5.QtCore import QTimer, QSettings

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞–º–∏


def add_reviews_button(main_window):
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞–º–∏ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ –≤ –ø–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞

    Args:
        main_window: –≠–∫–∑–µ–º–ø–ª—è—Ä –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    """
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–∞–Ω–µ–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        reviews_button = QPushButton("üåü –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞–º–∏")
        reviews_button.setToolTip("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞–º–∏ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞–º–∏")
        reviews_button.clicked.connect(lambda: show_reviews_manager(main_window))

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ —Ç—É–ª–±–∞—Ä
        if hasattr(main_window, 'toolbar'):
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–ø–∞—Ä–∞—Ç–æ—Ä –ø–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–æ–π
            main_window.toolbar.addSeparator()
            main_window.toolbar.addWidget(reviews_button)

            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞–ª–∏—á–∏—è –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            setup_notifications_checker(main_window)
        else:
            print("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: toolbar –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≥–ª–∞–≤–Ω–æ–º –æ–∫–Ω–µ")

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞–º–∏: {e}")


def show_reviews_manager(parent=None):
    """
    –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞–º–∏ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏

    Args:
        parent: –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ –æ–∫–Ω–æ
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞ –ë–î –ø–µ—Ä–µ–¥ –æ—Ç–∫—Ä—ã—Ç–∏–µ–º –æ–∫–Ω–∞
        from reviews_manager.db_check import check_db_connection

        if not check_db_connection():
            from PyQt5.QtWidgets import QMessageBox
            reply = QMessageBox.question(
                parent,
                "–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –ë–î",
                "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤. "
                "–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ?",
                QMessageBox.Yes | QMessageBox.No,
                QMessageBox.No
            )

            if reply == QMessageBox.No:
                return

        # –°–æ–∑–¥–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞–º–∏
        from reviews_manager.reviews_manager_app import ReviewsManagerApp
        reviews_window = ReviewsManagerApp(parent)
        reviews_window.show()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ–∫–Ω–æ –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º –æ–∫–Ω–µ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è —Å–±–æ—Ä—â–∏–∫–æ–º –º—É—Å–æ—Ä–∞
        if parent:
            if not hasattr(parent, 'reviews_window'):
                parent.reviews_window = reviews_window
            else:
                parent.reviews_window = reviews_window

    except Exception as e:
        from PyQt5.QtWidgets import QMessageBox
        QMessageBox.critical(
            parent,
            "–û—à–∏–±–∫–∞",
            f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –æ–∫–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞–º–∏: {str(e)}"
        )

def setup_notifications_checker(main_window):
    """
    –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤

    Args:
        main_window: –≠–∫–∑–µ–º–ø–ª—è—Ä –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–∞–π–º–µ—Ä–∞
        if not hasattr(main_window, 'reviews_check_timer'):
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤/–∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            main_window.reviews_check_timer = QTimer(main_window)
            main_window.reviews_check_timer.timeout.connect(lambda: check_new_items(main_window))

            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç (300000 –º—Å)
            main_window.reviews_check_timer.start(300000)

            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫–∏
            main_window.new_reviews_count = 0
            main_window.new_contacts_count = 0

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")


def check_new_items(main_window):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤

    Args:
        main_window: –≠–∫–∑–µ–º–ø–ª—è—Ä –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    """
    try:
        # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∫–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        # –ù–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ API

        # –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ–º –∫–æ–¥
        import mysql.connector
        from reviews_manager.config import DB_CONFIG, DB_TABLES

        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î (–∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–æ–º–µ–Ω –≤–º–µ—Å—Ç–æ localhost)
        try:
            from reviews_manager.config import DB_CONFIG
            db_config = DB_CONFIG.copy()
        except ImportError:
            db_config = {
                'host': 'mpsp.online',
                'user': 'u3054108_Mukam1',
                'password': 'vYL-f2w-cNk-fuJ',
                'database': 'u3054108_reviews_db',
                'charset': 'utf8mb4',
                'collation': 'utf8mb4_unicode_ci'
            }
        db_config['host'] = 'mpsp.online'

        # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        settings = QSettings("OrderManager", "ReviewsNotifications")
        last_check = settings.value("last_check", None)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î
        connection = mysql.connector.connect(**db_config)
        cursor = connection.cursor(dictionary=True)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã
        new_reviews_count = 0
        new_contacts_count = 0

        if last_check:
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ –æ–±—ä–µ–∫—Ç datetime, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
            if isinstance(last_check, str):
                from datetime import datetime
                try:
                    last_check = datetime.strptime(last_check, "%Y-%m-%d %H:%M:%S")
                except ValueError:
                    last_check = None

            if last_check:
                # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π
                reviews_table = DB_TABLES['reviews']['name']
                contacts_table = DB_TABLES['contacts']['name']

                # –ó–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤
                query = f"""
                    SELECT COUNT(*) as count 
                    FROM {reviews_table} 
                    WHERE date > %s AND status = 'pending'
                """
                cursor.execute(query, (last_check,))
                result = cursor.fetchone()
                if result:
                    new_reviews_count = result['count']

                # –ó–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –Ω–æ–≤—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
                query = f"""
                    SELECT COUNT(*) as count 
                    FROM {contacts_table} 
                    WHERE date > %s AND status = 'new'
                """
                cursor.execute(query, (last_check,))
                result = cursor.fetchone()
                if result:
                    new_contacts_count = result['count']

        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        cursor.close()
        connection.close()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –∫–∞–∫ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        from datetime import datetime
        now = datetime.now()
        settings.setValue("last_check", now.strftime("%Y-%m-%d %H:%M:%S"))

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –≤ –≥–ª–∞–≤–Ω–æ–º –æ–∫–Ω–µ
        main_window.new_reviews_count = new_reviews_count
        main_window.new_contacts_count = new_contacts_count

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        total_new = new_reviews_count + new_contacts_count
        if total_new > 0:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
            update_reviews_button_text(main_window, new_reviews_count, new_contacts_count)

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            if hasattr(main_window, 'statusBar'):
                main_window.statusBar().showMessage(
                    f"–ü–æ–ª—É—á–µ–Ω–æ {new_reviews_count} –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –∏ {new_contacts_count} –Ω–æ–≤—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤",
                    5000  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞ 5 —Å–µ–∫—É–Ω–¥
                )

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {e}")


def update_reviews_button_text(main_window, reviews_count=0, contacts_count=0):
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞–º–∏ —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤

    Args:
        main_window: –≠–∫–∑–µ–º–ø–ª—è—Ä –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        reviews_count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤
        contacts_count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    """
    try:
        # –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É –≤ —Ç—É–ª–±–∞—Ä–µ
        if hasattr(main_window, 'toolbar'):
            for i in range(main_window.toolbar.layout().count()):
                widget = main_window.toolbar.layout().itemAt(i).widget()
                if isinstance(widget, QPushButton) and "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞–º–∏" in widget.text():
                    # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
                    button_text = "üåü –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞–º–∏"

                    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä, –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
                    total_new = reviews_count + contacts_count
                    if total_new > 0:
                        button_text = f"üåü –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞–º–∏ üîî({total_new})"

                    # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
                    widget.setText(button_text)

                    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
                    tooltip = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞–º–∏ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞–º–∏"
                    if reviews_count > 0 or contacts_count > 0:
                        tooltip += f"\n\n–ù–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã: {total_new}"
                        if reviews_count > 0:
                            tooltip += f"\n- –û—Ç–∑—ã–≤—ã: {reviews_count}"
                        if contacts_count > 0:
                            tooltip += f"\n- –ö–æ–Ω—Ç–∞–∫—Ç—ã: {contacts_count}"

                    widget.setToolTip(tooltip)
                    break

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏: {e}")


# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏

def initialize_reviews_module(main_window):
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞–º–∏

    Args:
        main_window: –≠–∫–∑–µ–º–ø–ª—è—Ä –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    """
    try:
        print("–ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –º–æ–¥—É–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞–º–∏ –≤ initialize_reviews_module")
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ –∞—Ç—Ä–∏–±—É—Ç toolbar
        if not hasattr(main_window, 'toolbar'):
            print("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –∞—Ç—Ä–∏–±—É—Ç 'toolbar' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≥–ª–∞–≤–Ω–æ–º –æ–∫–Ω–µ")
            return False

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
        add_reviews_button(main_window)

        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
        QTimer.singleShot(5000, lambda: check_new_items(main_window))

        print("–ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞–º–∏ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        return True

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥—É–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞–º–∏: {e}")
        import traceback
        traceback.print_exc()
        return False