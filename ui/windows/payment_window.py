from datetime import datetime
from core.database import Order
from core.database_manager import DatabaseManager
from .dialog_styles import DIALOG_WINDOW_STYLE
from .state_manager import StateManager
# –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –ø—É—Ç–µ–π
from ui.windows.payment_window_integration import integrate_path_manager_to_payment_window, modify_save_payment_method
import uuid
import urllib.parse
from PyQt5.QtWidgets import (
    QDialog, QVBoxLayout, QHBoxLayout, QLabel, QPushButton, QLineEdit,
    QMessageBox, QFileDialog, QInputDialog, QApplication
)
from PyQt5.QtCore import QUrl
from PyQt5.QtGui import QDoubleValidator, QDesktopServices


class PaymentWindow(QDialog):
    def __init__(self, parent=None, order=None):
        super().__init__(parent)
        self.db_manager = DatabaseManager()
        self.state_manager = StateManager()
        self.original_order_id = order.id

        try:
            self.load_order_data()
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –µ–¥–∏–Ω—ã–π —Å—Ç–∏–ª—å
            self.setStyleSheet(DIALOG_WINDOW_STYLE)
            self.setup_ui()

            # –í–æ—Ç –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —ç—Ç–∏ –≤—ã–∑–æ–≤—ã
            integrate_path_manager_to_payment_window(self)
            modify_save_payment_method(self)

        except Exception as e:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–∫–Ω–∞: {str(e)}")
    def load_order_data(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞"""
        with self.db_manager.session_scope() as session:
            order = session.query(Order).get(self.original_order_id)
            if not order:
                raise ValueError(f"–ó–∞–∫–∞–∑ —Å ID {self.original_order_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
            self.current_data = {
                'id': order.id,
                'fio': order.fio,
                'group': order.group,
                'service': order.service,
                'cost': float(order.cost) if order.cost not in (None, '–ù–µ —É–∫–∞–∑–∞–Ω–æ') else 0.0,
                'paid_amount': float(order.paid_amount) if order.paid_amount not in (None, '–ù–µ —É–∫–∞–∑–∞–Ω–æ') else 0.0,
                'discount': order.discount if order.discount not in (None, '–ù–µ —É–∫–∞–∑–∞–Ω–æ') else None,
                'status': order.status
            }

            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—É–º–º—ã
            if self.current_data['discount']:
                try:
                    discount_percent = float(self.current_data['discount'].strip('%'))
                    self.discount_amount = self.current_data['cost'] * (discount_percent / 100)
                    self.discounted_total = self.current_data['cost'] - self.discount_amount
                except (ValueError, AttributeError):
                    self.discount_amount = 0
                    self.discounted_total = self.current_data['cost']
            else:
                self.discount_amount = 0
                self.discounted_total = self.current_data['cost']

            self.remaining = max(0, self.discounted_total - self.current_data['paid_amount'])

    def offer_print_documents(self, order):
        """–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–µ—á–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
        try:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∑–∞–∫–∞–∑–∞
            order_id = order.id if hasattr(order, 'id') else order

            msg = QMessageBox()
            msg.setWindowTitle("–ü–µ—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
            msg.setText("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")

            receipt_button = msg.addButton("–ö–≤–∏—Ç–∞–Ω—Ü–∏—è", QMessageBox.ActionRole)
            check_button = msg.addButton("–ö–∞—Å—Å–æ–≤—ã–π —á–µ–∫", QMessageBox.ActionRole)
            thanks_button = msg.addButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å", QMessageBox.ActionRole)
            review_button = msg.addButton("–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å + —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ—Ç–∑—ã–≤", QMessageBox.ActionRole)  # –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
            cancel_button = msg.addButton("–û—Ç–º–µ–Ω–∞", QMessageBox.RejectRole)

            msg.exec_()

            if msg.clickedButton() == receipt_button:
                with self.db_manager.session_scope() as session:
                    current_order = session.query(Order).get(order_id)
                    if current_order:
                        file_name = f"–ö–≤–∏—Ç–∞–Ω—Ü–∏—è_{current_order.fio}_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf"
                        file_path, _ = QFileDialog.getSaveFileName(
                            self,
                            "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–≤–∏—Ç–∞–Ω—Ü–∏—é",
                            file_name,
                            "PDF files (*.pdf)"
                        )
                        if file_path:
                            self.create_receipt_pdf(file_path, current_order)
                            QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–ö–≤–∏—Ç–∞–Ω—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")

            elif msg.clickedButton() == check_button:
                with self.db_manager.session_scope() as session:
                    current_order = session.query(Order).get(order_id)
                    if current_order:
                        file_name = f"–ß–µ–∫_{current_order.fio}_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf"
                        file_path, _ = QFileDialog.getSaveFileName(
                            self,
                            "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ–∫",
                            file_name,
                            "PDF files (*.pdf)"
                        )
                        if file_path:
                            self.print_receipt(file_path, current_order)
                            QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–ß–µ–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")

            elif msg.clickedButton() == thanks_button:
                with self.db_manager.session_scope() as session:
                    current_order = session.query(Order).get(order_id)
                    if current_order:
                        self.send_thanks_message(current_order)

            elif msg.clickedButton() == review_button:  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏
                # –ü–µ—Ä–µ–¥–∞–µ–º ID –∑–∞–∫–∞–∑–∞ –≤–º–µ—Å—Ç–æ –æ–±—ä–µ–∫—Ç–∞
                self.send_thanks_with_review(order_id)

        except Exception as e:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {str(e)}")

    def send_thanks_message(self, order):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ WhatsApp —Å –≤—ã–±–æ—Ä–æ–º —à–∞–±–ª–æ–Ω–∞"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            phone = None

            if order.phone:
                # –û—á–∏—â–∞–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
                phone = order.phone.replace('+', '').replace('-', '').replace(' ', '')

            # –ï—Å–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –µ–≥–æ
            if not phone:
                phone, ok = QInputDialog.getText(
                    self,
                    "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
                    "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞ (–±–µ–∑ +):"
                )
                if not ok or not phone:
                    return False

            # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥ –¥–ª—è –≤—ã–±–æ—Ä–∞ —à–∞–±–ª–æ–Ω–∞
            template_msg = QMessageBox()
            template_msg.setWindowTitle("–í—ã–±–æ—Ä —à–∞–±–ª–æ–Ω–∞")
            template_msg.setText("–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:")

            formal_btn = template_msg.addButton("–§–æ—Ä–º–∞–ª—å–Ω—ã–π", QMessageBox.ActionRole)
            friendly_btn = template_msg.addButton("–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π", QMessageBox.ActionRole)
            minimal_btn = template_msg.addButton("–ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π", QMessageBox.ActionRole)
            cancel_btn = template_msg.addButton("–û—Ç–º–µ–Ω–∞", QMessageBox.RejectRole)

            template_msg.exec_()

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω
            if template_msg.clickedButton() == formal_btn:
                thanks_message = (
                    "üåü *–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –í–∞—à –∑–∞–∫–∞–∑!* üåü\n\n"
                    f"–£–≤–∞–∂–∞–µ–º—ã–π(–∞—è) {order.fio}!\n\n"
                    "–ú—ã –∏—Å–∫—Ä–µ–Ω–Ω–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –í–∞–º –∑–∞ –≤—ã–±–æ—Ä –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏. üôè\n"
                    "–í–∞—à–∞ –æ–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞ –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ. ‚úÖ\n\n"
                    "–ï—Å–ª–∏ —É –í–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, "
                    "–Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n\n"
                    "–° —É–≤–∞–∂–µ–Ω–∏–µ–º,\n"
                    "–ö–æ–º–∞–Ω–¥–∞ MPSP üíº"
                )
            elif template_msg.clickedButton() == friendly_btn:
                thanks_message = (
                    "üéâ *–£—Ä–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑!* üéâ\n\n"
                    f"–ü—Ä–∏–≤–µ—Ç, {order.fio}! üëã\n\n"
                    "–ú—ã –æ—á–µ–Ω—å —Ä–∞–¥—ã, —á—Ç–æ —Ç—ã –≤—ã–±—Ä–∞–ª(–∞) –Ω–∞—Å! üòä\n"
                    "–¢–≤–æ—è –æ–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞! ‚úÖüí∞\n\n"
                    "–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã - –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–∞–º, –º—ã –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏! üì±\n\n"
                    "–û—Ç–ª–∏—á–Ω–æ–≥–æ –¥–Ω—è! ‚òÄÔ∏è\n"
                    "–ö–æ–º–∞–Ω–¥–∞ MPSP üíô"
                )
            elif template_msg.clickedButton() == minimal_btn:
                thanks_message = (
                    "‚úÖ *–û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞*\n\n"
                    f"–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑, {order.fio}!\n"
                    "–ú—ã —Ü–µ–Ω–∏–º –í–∞—à–µ –¥–æ–≤–µ—Ä–∏–µ.\n\n"
                    "–ö–æ–º–∞–Ω–¥–∞ MPSP ü§ù"
                )
            else:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–û—Ç–º–µ–Ω–∞"
                return False

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è API —á–µ—Ä–µ–∑ api.whatsapp.com
            # –≠—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π API, –∫–æ—Ç–æ—Ä—ã–π –ª—É—á—à–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —ç–º–æ–¥–∑–∏
            whatsapp_url = f"https://api.whatsapp.com/send?phone={phone}&text={urllib.parse.quote(thanks_message)}"

            # –û—Ç–∫—Ä—ã–≤–∞–µ–º WhatsApp –≤ –±—Ä–∞—É–∑–µ—Ä–µ
            QDesktopServices.openUrl(QUrl(whatsapp_url))

            QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–°–æ–æ–±—â–µ–Ω–∏–µ —Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
            return True

        except Exception as e:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}")
            return False

    def generate_review_link(self, order_id):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ—Ä–æ—Ç–∫—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ç–∑—ã–≤–∞ –∫–ª–∏–µ–Ω—Ç–∞"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–∫–∞–∑–µ
            with self.db_manager.session_scope() as session:
                order = session.query(Order).get(order_id)
                if not order:
                    print(f"–û—à–∏–±–∫–∞: –ó–∞–∫–∞–∑ #{order_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
                    return None

                # –ö–æ–¥–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è URL
                service_encoded = urllib.parse.quote(order.service or "")
                name_encoded = urllib.parse.quote(order.fio or "")

                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π, –Ω–æ –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–æ–∫–µ–Ω
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º 8 —Å–∏–º–≤–æ–ª–æ–≤ –∏–∑ UUID –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏
                token = str(uuid.uuid4()).split('-')[0][:8]

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ –∑–∞–∫–∞–∑–µ
                order.review_token = token

                # –î–æ–±–∞–≤–ª—è–µ–º ID –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Ç–æ–∫–µ–Ω –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
                client_token = f"{token}_{order_id}"

                # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
                from reviews_manager.config import SITE_CONFIG
                base_url = SITE_CONFIG.get('base_url', 'https://mpsp.online')
                reviews_page = SITE_CONFIG.get('reviews_page', '/submit-review.html')

                # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è (–¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å=1 –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–¥–æ–±—Ä–µ–Ω–∏—è)
                params = {
                    'token': client_token,
                    'order': order_id,
                    'name': name_encoded,
                    'service': service_encoded,
                    'auto_approve': 1  # –ü–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–¥–æ–±—Ä–µ–Ω–∏—è
                }

                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –∑–∞–ø—Ä–æ—Å–∞
                query_string = urllib.parse.urlencode(params)

                # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é —Å—Å—ã–ª–∫—É
                full_link = f"{base_url}{reviews_page}?{query_string}"

                # –°–æ–∫—Ä–∞—â–∞–µ–º —Å—Å—ã–ª–∫—É —Å –ø–æ–º–æ—â—å—é –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è
                short_link = self.shorten_url(full_link)

                session.commit()
                print(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ –∫–æ—Ä–æ—Ç–∫–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –æ—Ç–∑—ã–≤–∞ –∑–∞–∫–∞–∑–∞ #{order_id}: {short_link}")

                return short_link if short_link else full_link

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏ –¥–ª—è –æ—Ç–∑—ã–≤–∞: {str(e)}")
            return None

    def shorten_url(self, long_url):
        """–°–æ–∫—Ä–∞—â–∞–µ—Ç URL —Å –ø–æ–º–æ—â—å—é —Å–µ—Ä–≤–∏—Å–∞ TinyURL"""
        try:
            # –ú–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ TinyURL API (–ø—Ä–æ—Å—Ç–æ–π –∏ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏)
            import requests

            tinyurl_api = f"https://tinyurl.com/api-create.php?url={urllib.parse.quote(long_url)}"
            try:
                response = requests.get(tinyurl_api, timeout=5)
                if response.status_code == 200:
                    return response.text.strip()
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–∏ —á–µ—Ä–µ–∑ TinyURL: {str(e)}")

            # –ï—Å–ª–∏ TinyURL –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π URL
            return long_url

        except Exception as e:
            print(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–∏ URL: {str(e)}")
            return long_url

    def send_thanks_with_review(self, order_id):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –æ—Ç–∑—ã–≤ —á–µ—Ä–µ–∑ WhatsApp"""
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –∑–∞–∫–∞–∑–∞ –≤–º–µ—Å—Ç–æ –æ–±—ä–µ–∫—Ç–∞
            with self.db_manager.session_scope() as session:
                order = session.query(Order).get(order_id)
                if not order:
                    QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", f"–ó–∞–∫–∞–∑ —Å ID {order_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    return False

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ order –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–Ω–µ —Å–µ—Å—Å–∏–∏
                order_data = {
                    'id': order.id,
                    'fio': order.fio,
                    'phone': order.phone
                }

                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ç–∑—ã–≤–∞ –≤–Ω—É—Ç—Ä–∏ —Å–µ—Å—Å–∏–∏
                review_link = self.generate_review_link(order.id)

            # –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ –∏–∑ order_data, –∞ –Ω–µ —Å–∞–º –æ–±—ä–µ–∫—Ç order

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            phone = None

            if order_data['phone']:
                # –û—á–∏—â–∞–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
                phone = order_data['phone'].replace('+', '').replace('-', '').replace(' ', '')

            # –ï—Å–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –µ–≥–æ
            if not phone:
                phone, ok = QInputDialog.getText(
                    self,
                    "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
                    "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞ (–±–µ–∑ +):"
                )
                if not ok or not phone:
                    return False

            if not review_link:
                QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ç–∑—ã–≤–∞")
                return False

            # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥ –¥–ª—è –≤—ã–±–æ—Ä–∞ —à–∞–±–ª–æ–Ω–∞
            template_msg = QMessageBox()
            template_msg.setWindowTitle("–í—ã–±–æ—Ä —à–∞–±–ª–æ–Ω–∞")
            template_msg.setText("–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –æ—Ç–∑—ã–≤:")

            formal_btn = template_msg.addButton("–§–æ—Ä–º–∞–ª—å–Ω—ã–π", QMessageBox.ActionRole)
            friendly_btn = template_msg.addButton("–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π", QMessageBox.ActionRole)
            minimal_btn = template_msg.addButton("–ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π", QMessageBox.ActionRole)
            cancel_btn = template_msg.addButton("–û—Ç–º–µ–Ω–∞", QMessageBox.RejectRole)

            template_msg.exec_()

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω
            if template_msg.clickedButton() == formal_btn:
                thanks_message = (
                    "üåü *–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –í–∞—à –∑–∞–∫–∞–∑!* üåü\n\n"
                    f"–£–≤–∞–∂–∞–µ–º—ã–π(–∞—è) {order_data['fio']}!\n\n"
                    "–ú—ã –∏—Å–∫—Ä–µ–Ω–Ω–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –í–∞–º –∑–∞ –≤—ã–±–æ—Ä –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏. üôè\n"
                    "–í–∞—à–∞ –æ–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞ –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ. ‚úÖ\n\n"
                    "–ù–∞–º –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ –í–∞—à–µ –º–Ω–µ–Ω–∏–µ –æ —Ä–∞–±–æ—Ç–µ —Å –Ω–∞–º–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏, "
                    "–æ—Å—Ç–∞–≤–∏–≤ –æ—Ç–∑—ã–≤ –ø–æ —Å—Å—ã–ª–∫–µ:\n"
                    f"{review_link}\n\n"
                    "–° —É–≤–∞–∂–µ–Ω–∏–µ–º,\n"
                    "–ö–æ–º–∞–Ω–¥–∞ MPSP üíº"
                )
            elif template_msg.clickedButton() == friendly_btn:
                thanks_message = (
                    "üéâ *–£—Ä–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑!* üéâ\n\n"
                    f"–ü—Ä–∏–≤–µ—Ç, {order_data['fio']}! üëã\n\n"
                    "–ú—ã –æ—á–µ–Ω—å —Ä–∞–¥—ã, —á—Ç–æ —Ç—ã –≤—ã–±—Ä–∞–ª(–∞) –Ω–∞—Å! üòä\n"
                    "–¢–≤–æ—è –æ–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞! ‚úÖüí∞\n\n"
                    "–ë—É–¥–µ–º –æ—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã, –µ—Å–ª–∏ –ø–æ–¥–µ–ª–∏—à—å—Å—è —Å–≤–æ–∏–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏! "
                    "–û—Å—Ç–∞–≤—å –æ—Ç–∑—ã–≤ –ø–æ —Å—Å—ã–ª–∫–µ üëá\n"
                    f"{review_link}\n\n"
                    "–û—Ç–ª–∏—á–Ω–æ–≥–æ –¥–Ω—è! ‚òÄÔ∏è\n"
                    "–ö–æ–º–∞–Ω–¥–∞ MPSP üíô"
                )
            elif template_msg.clickedButton() == minimal_btn:
                thanks_message = (
                    "‚úÖ *–û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞*\n\n"
                    f"–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑, {order_data['fio']}!\n"
                    "–ú—ã —Ü–µ–Ω–∏–º –í–∞—à–µ –¥–æ–≤–µ—Ä–∏–µ.\n\n"
                    f"–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤: {review_link}\n\n"
                    "–ö–æ–º–∞–Ω–¥–∞ MPSP ü§ù"
                )
            else:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–û—Ç–º–µ–Ω–∞"
                return False

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è API —á–µ—Ä–µ–∑ api.whatsapp.com
            whatsapp_url = f"https://api.whatsapp.com/send?phone={phone}&text={urllib.parse.quote(thanks_message)}"

            # –û—Ç–∫—Ä—ã–≤–∞–µ–º WhatsApp –≤ –±—Ä–∞—É–∑–µ—Ä–µ
            QDesktopServices.openUrl(QUrl(whatsapp_url))

            QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–°–æ–æ–±—â–µ–Ω–∏–µ —Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é –∏ —Å—Å—ã–ª–∫–æ–π –Ω–∞ –æ—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ —Å—Å—ã–ª–∫–∞ –¥–ª—è –æ—Ç–∑—ã–≤–∞ —É–∂–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞
            with self.db_manager.session_scope() as session:
                order = session.query(Order).get(order_data['id'])
                if order:
                    # –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –¥–ª—è –∑–∞–∫–∞–∑–∞ —É–∂–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –æ—Ç–∑—ã–≤–∞
                    if not order.review_token:
                        order.review_token = "sent_with_thanks"
                    session.commit()

            return True

        except Exception as e:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}")
            return False

    def offer_review_link(self, order_id):
        """–ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Å–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ç–∑—ã–≤–∞, –µ—Å–ª–∏ –∑–∞–∫–∞–∑ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–ø–ª–∞—á–µ–Ω"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å—Å—ã–ª–∫–∞ –¥–ª—è –æ—Ç–∑—ã–≤–∞
            with self.db_manager.session_scope() as session:
                order = session.query(Order).get(order_id)
                if not order:
                    return False

                # –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ —É–∂–µ –µ—Å—Ç—å, –Ω–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–Ω–æ–≤–∞
                if order.review_token:
                    return False

            # –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∏ –Ω–µ—Ç, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –µ—ë —Å–æ–∑–¥–∞—Ç—å
            reply = QMessageBox.question(
                self,
                "–û—Ç–∑—ã–≤ –∫–ª–∏–µ–Ω—Ç–∞",
                "–ó–∞–∫–∞–∑ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–ø–ª–∞—á–µ–Ω! –•–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ç–∑—ã–≤–∞ –∫–ª–∏–µ–Ω—Ç–∞?",
                QMessageBox.Yes | QMessageBox.No,
                QMessageBox.Yes
            )

            if reply == QMessageBox.Yes:
                self.generate_and_show_review_link(order_id)

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –¥–ª—è –æ—Ç–∑—ã–≤–∞: {str(e)}")
    def create_receipt(self, order):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ - –æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏"""
        try:
            # –°–æ–∑–¥–∞—ë–º –∏–º—è —Ñ–∞–π–ª–∞
            file_name = f"–ö–≤–∏—Ç–∞–Ω—Ü–∏—è_{order.fio}_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf"
            file_path, _ = QFileDialog.getSaveFileName(
                self,
                "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–≤–∏—Ç–∞–Ω—Ü–∏—é",
                file_name,
                "PDF files (*.pdf)"
            )

            if file_path:
                self.create_receipt_pdf(file_path, order)
                QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–ö–≤–∏—Ç–∞–Ω—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")

        except Exception as e:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏: {str(e)}")

    def safe_float(self, value):
        """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ float"""
        try:
            if isinstance(value, (int, float)):
                return float(value)
            if isinstance(value, str):
                if value.strip() == "–ù–µ —É–∫–∞–∑–∞–Ω–æ":
                    return 0.0
                return float(value.replace(',', '.'))
            return 0.0
        except (ValueError, TypeError, AttributeError):
            return 0.0

    def recalculate_remaining(self):
        """–ü–µ—Ä–µ—Å—á–µ—Ç –æ—Å—Ç–∞—Ç–∫–∞ —Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏"""
        try:
            if hasattr(self, 'current_data'):
                cost = self.safe_float(self.current_data.get('cost', 0))
                paid = self.safe_float(self.current_data.get('paid_amount', 0))

                # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∫–∏–¥–∫–∏
                if self.current_data.get('discount'):
                    try:
                        discount_str = str(self.current_data['discount']).strip()
                        if discount_str != "–ù–µ —É–∫–∞–∑–∞–Ω–æ":
                            discount_percent = float(discount_str.rstrip('%'))
                            discount_amount = cost * (discount_percent / 100)
                            self.discounted_total = cost - discount_amount
                        else:
                            self.discounted_total = cost
                    except (ValueError, TypeError):
                        self.discounted_total = cost
                else:
                    self.discounted_total = cost

                self.remaining = max(0, self.discounted_total - paid)
                return self.remaining
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—á–µ—Ç–µ –æ—Å—Ç–∞—Ç–∫–∞: {e}")
            return 0.0

    def get_remaining_amount(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–∞ —Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏"""
        try:
            if hasattr(self, 'remaining'):
                return self.remaining
            else:
                return self.recalculate_remaining()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Å—Ç–∞—Ç–∫–∞: {e}")
            return 0.0

    def validate_payment(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –ø–ª–∞—Ç–µ–∂–∞"""
        try:
            if not self.payment_input.text():
                raise ValueError("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –æ–ø–ª–∞—Ç—ã")

            payment_amount = self.safe_float(self.payment_input.text())
            if payment_amount <= 0:
                raise ValueError("–°—É–º–º–∞ –æ–ø–ª–∞—Ç—ã –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0")

            remaining = self.get_remaining_amount()
            if payment_amount > remaining:
                raise ValueError("–°—É–º–º–∞ –æ–ø–ª–∞—Ç—ã –ø—Ä–µ–≤—ã—à–∞–µ—Ç –æ—Å—Ç–∞—Ç–æ–∫")

            return True
        except ValueError as e:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", str(e))
            return False
    def _calculate_discounted_cost(self):
        """–†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏"""
        try:
            if self.discount:
                discount_percent = float(self.discount.strip('%'))
                discount_amount = self.base_cost * (discount_percent / 100)
                return self.base_cost - discount_amount
            return self.base_cost
        except Exception:
            return self.base_cost

    def save_payment(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã"""
        try:
            if not self.validate_payment():
                return False

            payment_amount = float(self.payment_input.text())
            order_data = {}  # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            old_status = None
            status_changed_to_completed = False
            review_link_created = False  # –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏

            with self.db_manager.session_scope() as session:
                # –ü–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂—É—é –≤–µ—Ä—Å–∏—é –∑–∞–∫–∞–∑–∞
                order = session.query(Order).get(self.original_order_id)
                if not order:
                    QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    return False

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
                old_status = order.status
                review_link_created = bool(order.review_token)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞ —Å—Å—ã–ª–∫–∞

                # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
                order.paid_amount = (order.paid_amount or 0) + payment_amount
                order.remaining_amount = self.discounted_total - order.paid_amount

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É –ø—Ä–∏ –ª—é–±–æ–π –æ–ø–ª–∞—Ç–µ (—á–∞—Å—Ç–∏—á–Ω–æ–π –∏–ª–∏ –ø–æ–ª–Ω–æ–π)
                order.payment_date = datetime.now().date()

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –æ–ø–ª–∞—Ç–µ
                if order.remaining_amount <= 0:
                    if order.status != '–í—ã–ø–æ–ª–Ω–µ–Ω':
                        status_changed_to_completed = True
                    order.status = '–í—ã–ø–æ–ª–Ω–µ–Ω'
                elif order.remaining_amount > 0 and order.status != '–í —Ä–∞–±–æ—Ç–µ':
                    order.status = '–í –æ–∂–∏–¥–∞–Ω–∏–∏ –æ–ø–ª–∞—Ç—ã'

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –≤ —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–µ—Å—Å–∏–∏
                order_data = {
                    'id': order.id,
                    'fio': order.fio,
                    'service': order.service,
                    'amount': payment_amount,
                    'status': order.status,
                    'old_status': old_status,
                    'status_changed_to_completed': status_changed_to_completed,
                    'review_link_created': review_link_created
                }

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
                session.commit()

                # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–µ—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
                self.offer_print_documents(order.id)

                # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
                self.state_manager.notify_all()

            # –¢–µ–ø–µ—Ä—å —Å–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞, –∏ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            # –°–æ–æ–±—â–∞–µ–º –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞
            QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω–∞!")

            # –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ Excel
            # –∏—Å–ø–æ–ª—å–∑—É—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            from ui.windows.excel_manager import ExcelManager
            excel_manager = ExcelManager(self)
            payment_data = {
                'order_id': order_data['id'],
                'fio': order_data['fio'],
                'amount': payment_amount
            }
            excel_manager.add_payment_to_excel(payment_data)

            # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ "–í—ã–ø–æ–ª–Ω–µ–Ω" –∏ —Å—Å—ã–ª–∫–∞ –µ—â–µ –Ω–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞,
            # –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ç–∑—ã–≤–∞
            if order_data.get('status_changed_to_completed', False) and not order_data.get('review_link_created',
                                                                                           False):
                self.offer_review_link(order_data['id'])

            self.accept()
            return True

        except Exception as e:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ–ø–ª–∞—Ç—ã: {str(e)}")
            return False

    # –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ generate_and_show_review_link –≤ –∫–ª–∞—Å—Å PaymentWindow
    def generate_and_show_review_link(self, order_id):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ç–∑—ã–≤–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –µ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        try:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ç–∑—ã–≤–∞ (—É–∂–µ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—É—é)
            short_link = self.generate_review_link(order_id)

            if not short_link:
                return False

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å—Å—ã–ª–∫–∞–º–∏
            msg_box = QMessageBox(self)
            msg_box.setWindowTitle("–°—Å—ã–ª–∫–∞ –¥–ª—è –æ—Ç–∑—ã–≤–∞")
            msg_box.setText(f"–ó–∞–∫–∞–∑ #{order_id} –≤—ã–ø–æ–ª–Ω–µ–Ω! –ü—Ä–µ–¥–ª–æ–∂–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç—É –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤.")

            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–æ—Ä–æ—Ç–∫—É—é —Å—Å—ã–ª–∫—É
            msg_box.setInformativeText(f"–°–æ–∫—Ä–∞—â–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –æ—Ç–∑—ã–≤–∞:\n\n{short_link}")
            msg_box.setIcon(QMessageBox.Information)

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
            copy_button = msg_box.addButton("–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É", QMessageBox.ActionRole)
            open_button = msg_box.addButton("–û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ", QMessageBox.ActionRole)
            send_button = msg_box.addButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ WhatsApp", QMessageBox.ActionRole)
            cancel_button = msg_box.addButton("–ó–∞–∫—Ä—ã—Ç—å", QMessageBox.RejectRole)

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∂–¥–µ–º —Ä–µ–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            msg_box.exec_()

            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫
            if msg_box.clickedButton() == copy_button:
                # –ö–æ–ø–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
                QApplication.clipboard().setText(short_link)
                QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!")

            elif msg_box.clickedButton() == open_button:
                # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ
                QDesktopServices.openUrl(QUrl(short_link))

            elif msg_box.clickedButton() == send_button:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ WhatsApp
                self.send_review_link_via_whatsapp(short_link, order_id)

            return True

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏ –¥–ª—è –æ—Ç–∑—ã–≤–∞: {str(e)}")
            return False
    # –î–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Å—ã–ª–∫–∏ —á–µ—Ä–µ–∑ WhatsApp
    def send_review_link_via_whatsapp(self, review_link, order_id):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –æ—Ç–∑—ã–≤ —á–µ—Ä–µ–∑ WhatsApp"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞
            with self.db_manager.session_scope() as session:
                order = session.query(Order).get(order_id)
                if not order or not order.phone:
                    # –ï—Å–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –µ–≥–æ
                    phone, ok = QInputDialog.getText(
                        self,
                        "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
                        "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞ (–±–µ–∑ +):"
                    )
                    if not ok or not phone:
                        return False
                else:
                    # –û—á–∏—â–∞–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    phone = order.phone.replace('+', '').replace('-', '').replace(' ', '')

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = f"–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–∫–∞–∑! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –æ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç–µ: {review_link}"
            encoded_message = urllib.parse.quote(message)

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è WhatsApp
            whatsapp_url = f"https://wa.me/{phone}?text={encoded_message}"

            # –û—Ç–∫—Ä—ã–≤–∞–µ–º WhatsApp
            QDesktopServices.openUrl(QUrl(whatsapp_url))
            return True

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Å—ã–ª–∫–∏ —á–µ—Ä–µ–∑ WhatsApp: {str(e)}")
            return False

    # –î–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ—Ç–∑—ã–≤

    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        self.setWindowTitle("–í–Ω–µ—Å–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã")
        self.setGeometry(300, 300, 400, 300)

        layout = QVBoxLayout(self)

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ
        info_group = QVBoxLayout()
        self.fio_label = QLabel(f"–§–ò–û: {self.current_data['fio']}")
        self.group_label = QLabel(f"–ì—Ä—É–ø–ø–∞: {self.current_data['group']}")
        self.service_label = QLabel(f"–£—Å–ª—É–≥–∞: {self.current_data['service']}")
        self.cost_label = QLabel(f"–°—Ç–æ–∏–º–æ—Å—Ç—å: {self.current_data['cost']:.2f} —Ä—É–±.")
        self.paid_label = QLabel(f"–£–∂–µ –æ–ø–ª–∞—á–µ–Ω–æ: {self.current_data['paid_amount']:.2f} —Ä—É–±.")
        self.remaining_label = QLabel(f"–û—Å—Ç–∞–ª–æ—Å—å: {self.remaining:.2f} —Ä—É–±.")

        if self.current_data['discount']:
            self.discount_label = QLabel(f"–°–∫–∏–¥–∫–∞: {self.current_data['discount']}")
            self.discounted_cost_label = QLabel(f"–°—É–º–º–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π: {self.discounted_total:.2f} —Ä—É–±.")
            info_group.addWidget(self.discount_label)
            info_group.addWidget(self.discounted_cost_label)

        for label in [self.fio_label, self.group_label, self.service_label,
                      self.cost_label, self.paid_label, self.remaining_label]:
            info_group.addWidget(label)

        layout.addLayout(info_group)

        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å—É–º–º—ã
        payment_layout = QHBoxLayout()
        self.payment_label = QLabel("–°—É–º–º–∞ –æ–ø–ª–∞—Ç—ã:")
        self.payment_input = QLineEdit()
        self.payment_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É")
        validator = QDoubleValidator(0, 999999.99, 2)
        validator.setNotation(QDoubleValidator.StandardNotation)
        self.payment_input.setValidator(validator)

        # –ö–Ω–æ–ø–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–∞
        self.fill_remaining_btn = QPushButton("–ó–∞–ø–æ–ª–Ω–∏—Ç—å –æ—Å—Ç–∞—Ç–æ–∫")
        self.fill_remaining_btn.clicked.connect(self.fill_remaining_amount)
        self.fill_remaining_btn.setObjectName("fill_remaining_btn")

        payment_layout.addWidget(self.payment_label)
        payment_layout.addWidget(self.payment_input)
        payment_layout.addWidget(self.fill_remaining_btn)

        layout.addLayout(payment_layout)

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        buttons_layout = QHBoxLayout()
        self.save_btn = QPushButton("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
        self.save_btn.clicked.connect(self.save_payment)
        self.cancel_btn = QPushButton("–û—Ç–º–µ–Ω–∞")
        self.cancel_btn.clicked.connect(self.reject)

        buttons_layout.addWidget(self.save_btn)
        buttons_layout.addWidget(self.cancel_btn)
        layout.addLayout(buttons_layout)

    def setup_style(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π"""
        self.setStyleSheet("""
            QPushButton {
                background-color: #2196F3;
                color: white;
                border: none;
                padding: 8px 16px;
                border-radius: 4px;
                min-width: 80px;
                font-weight: bold;
            }
            QPushButton:hover {
                background-color: #1976D2;
            }
            QPushButton#fill_remaining_btn {
                background-color: #4CAF50;
            }
            QPushButton#fill_remaining_btn:hover {
                background-color: #388E3C;
            }
            QDialog {
                background-color: white;
                margin: 10px;
            }
            QLabel {
                color: #333333;
                font-size: 14px;
            }
            QLineEdit {
                padding: 5px;
                border: 1px solid #ddd;
                border-radius: 4px;
                font-size: 14px;
            }
            QLineEdit:focus {
                border: 2px solid #2196F3;
            }
        """)

    def fill_remaining_amount(self):
        """–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Å—Ç–∞–≤—à–µ–π—Å—è —Å—É–º–º—ã"""
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞—Å—á–∏—Ç–∞–Ω–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫ –∏–∑ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
            self.payment_input.setText(str(self.remaining))
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ—Å—Ç–∞—Ç–∫–∞: {e}")

    def print_receipt(self, file_path, order):
        """–ü–µ—á–∞—Ç—å –∫–∞—Å—Å–æ–≤–æ–≥–æ —á–µ–∫–∞"""
        try:
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
            from reportlab.lib import colors
            from reportlab.lib.pagesizes import letter
            from reportlab.lib.units import mm
            from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Table, TableStyle
            from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
            from reportlab.pdfbase import pdfmetrics
            from reportlab.pdfbase.ttfonts import TTFont
            import os

            # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å–µ—Å—Å–∏–∏
            with self.db_manager.session_scope() as session:
                current_order = session.query(Order).get(order.id)
                if not current_order:
                    raise ValueError(f"–ó–∞–∫–∞–∑ —Å ID {order.id} –Ω–µ –Ω–∞–π–¥–µ–Ω")

                # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞
                order_data = {
                    'id': current_order.id,
                    'fio': current_order.fio,
                    'group': current_order.group,
                    'created_date': current_order.created_date,
                    'deadline': current_order.deadline,
                    'service': current_order.service,
                    'discount': current_order.discount,
                    'cost': current_order.cost,
                    'paid_amount': current_order.paid_amount,
                    'remaining_amount': current_order.remaining_amount,
                    'status': current_order.status
                }

            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —à—Ä–∏—Ñ—Ç —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
            try:
                pdfmetrics.registerFont(TTFont('Courier', 'C:\\Windows\\Fonts\\cour.ttf'))
            except:
                try:
                    pdfmetrics.registerFont(TTFont('Courier', '/usr/share/fonts/TTF/DejaVuSansMono.ttf'))
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —à—Ä–∏—Ñ—Ç–∞: {e}")
                    pdfmetrics.registerFont(TTFont('Courier', 'Helvetica'))

            # –°–æ–∑–¥–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
            doc = SimpleDocTemplate(
                file_path,
                pagesize=(140 * mm, 280 * mm),
                rightMargin=5 * mm,
                leftMargin=5 * mm,
                topMargin=5 * mm,
                bottomMargin=5 * mm
            )

            elements = []

            # –°—Ç–∏–ª–∏
            title_style = ParagraphStyle(
                'CashTitle',
                fontName='Courier',
                fontSize=20,
                alignment=1,
                spaceAfter=4 * mm,
                leading=24
            )

            text_style = ParagraphStyle(
                'CashText',
                fontName='Courier',
                fontSize=14,
                leading=16,
                alignment=1
            )

            # –ó–∞–≥–æ–ª–æ–≤–æ–∫
            elements.append(Paragraph("–ö–ê–°–°–û–í–´–ô –ß–ï–ö", title_style))
            elements.append(Paragraph("–û–û–û MPSP", text_style))
            elements.append(Paragraph(f"–¢–µ–ª: +7 906 632-25-71", text_style))
            elements.append(Paragraph("-" * 42, text_style))

            # –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
            current_time = datetime.now().strftime('%d-%m-%Y %H:%M')
            elements.append(Paragraph(f"–î–∞—Ç–∞: {current_time}", text_style))
            elements.append(Paragraph("-" * 42, text_style))

            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ
            data = [
                ["–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:", str(order_data['id'])],
                ["–§–ò–û:", order_data['fio']],
                ["–ì—Ä—É–ø–ø–∞:", order_data['group']],
                ["–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞:",
                 order_data['created_date'].strftime('%d-%m-%Y') if order_data['created_date'] else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'],
                ["–°—Ä–æ–∫:", order_data['deadline'] or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'],
                ["–£—Å–ª—É–≥–∞:", order_data['service']],
                ["–°–∫–∏–¥–∫–∞:", f"{order_data['discount']}" if order_data['discount'] else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"],
                ["–°—Ç–æ–∏–º–æ—Å—Ç—å:", f"{order_data['cost']:,.2f} ‚ÇΩ" if order_data['cost'] else "0.00 ‚ÇΩ"],
                ["–û–ø–ª–∞—á–µ–Ω–æ:", f"{order_data['paid_amount']:,.2f} ‚ÇΩ" if order_data['paid_amount'] else "0.00 ‚ÇΩ"],
                ["–û—Å—Ç–∞—Ç–æ–∫:",
                 f"{order_data['remaining_amount']:,.2f} ‚ÇΩ" if order_data['remaining_amount'] else "0.00 ‚ÇΩ"],
                ["–°—Ç–∞—Ç—É—Å:", order_data['status']]
            ]

            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
            table = Table(data, colWidths=[40 * mm, 90 * mm])
            table.setStyle(TableStyle([
                ('FONT', (0, 0), (-1, -1), 'Courier', 14),
                ('ALIGN', (0, 0), (0, -1), 'LEFT'),
                ('ALIGN', (1, 0), (1, -1), 'RIGHT'),
                ('TOPPADDING', (0, 0), (-1, -1), 2),
                ('BOTTOMPADDING', (0, 0), (-1, -1), 2),
            ]))

            elements.append(table)
            elements.append(Paragraph("-" * 42, text_style))

            # –ò—Ç–æ–≥–∏
            total_data = [
                ["–ò–¢–û–ì–û:", f"{order_data['cost']:,.2f} ‚ÇΩ" if order_data['cost'] else "0.00 ‚ÇΩ"],
                ["–û–ø–ª–∞—á–µ–Ω–æ:", f"{order_data['paid_amount']:,.2f} ‚ÇΩ" if order_data['paid_amount'] else "0.00 ‚ÇΩ"],
                ["–û—Å—Ç–∞—Ç–æ–∫:", f"{order_data['remaining_amount']:,.2f} ‚ÇΩ" if order_data['remaining_amount'] else "0.00 ‚ÇΩ"]
            ]

            total_table = Table(total_data, colWidths=[70 * mm, 60 * mm])
            total_table.setStyle(TableStyle([
                ('FONT', (0, 0), (-1, -1), 'Courier', 16),
                ('ALIGN', (0, 0), (0, -1), 'LEFT'),
                ('ALIGN', (1, 0), (1, -1), 'RIGHT'),
                ('TOPPADDING', (0, 0), (-1, -1), 2),
                ('BOTTOMPADDING', (0, 0), (-1, -1), 2),
            ]))

            elements.append(total_table)
            elements.append(Paragraph("-" * 42, text_style))

            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –æ–ø–ª–∞—Ç—ã
            elements.append(Paragraph("–î–õ–Ø –û–ü–õ–ê–¢–´:", text_style))
            elements.append(Paragraph("–°–±–µ—Ä–±–∞–Ω–∫: +79066322571", text_style))
            elements.append(Paragraph("WhatsApp: +79066322571", text_style))
            elements.append(Paragraph("-" * 42, text_style))

            # –ü–æ–¥–ø–∏—Å–∏
            signature_data = [
                ["–ü–æ–¥–ø–∏—Å—å:", "_________________"],
                ["–î–∞—Ç–∞:", "_________________"]
            ]

            signature_table = Table(signature_data, colWidths=[40 * mm, 90 * mm])
            signature_table.setStyle(TableStyle([
                ('FONT', (0, 0), (-1, -1), 'Courier', 14),
                ('ALIGN', (0, 0), (0, -1), 'LEFT'),
                ('ALIGN', (1, 0), (1, -1), 'CENTER'),
            ]))

            elements.append(signature_table)

            # –°–æ–∑–¥–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
            doc.build(elements)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω
            if not os.path.exists(file_path):
                raise FileNotFoundError(f"–§–∞–π–ª {file_path} –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω")

            QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–ß–µ–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")

        except Exception as e:
            error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —á–µ–∫–∞: {str(e)}"
            print(error_msg)  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", error_msg)

    def create_receipt_pdf(self, file_path, order):
        """–°–æ–∑–¥–∞–Ω–∏–µ PDF –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏"""
        try:
            from reportlab.lib import colors
            from reportlab.lib.pagesizes import letter
            from reportlab.lib.units import mm
            from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Table, TableStyle
            from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
            from reportlab.pdfbase import pdfmetrics
            from reportlab.pdfbase.ttfonts import TTFont
            import os

            # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å–µ—Å—Å–∏–∏
            with self.db_manager.session_scope() as session:
                current_order = session.query(Order).get(order.id)
                if not current_order:
                    raise ValueError(f"–ó–∞–∫–∞–∑ —Å ID {order.id} –Ω–µ –Ω–∞–π–¥–µ–Ω")

                # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞
                order_data = {
                    'id': current_order.id,
                    'fio': current_order.fio,
                    'group': current_order.group,
                    'phone': current_order.phone,
                    'theme': current_order.theme,
                    'service': current_order.service,
                    'cost': current_order.cost,
                    'paid_amount': current_order.paid_amount,
                    'remaining_amount': current_order.remaining_amount,
                    'status': current_order.status
                }

            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —à—Ä–∏—Ñ—Ç Arial
            try:
                pdfmetrics.registerFont(TTFont('Arial', 'C:\\Windows\\Fonts\\arial.ttf'))
            except:
                try:
                    pdfmetrics.registerFont(TTFont('Arial', '/usr/share/fonts/TTF/DejaVuSans.ttf'))
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —à—Ä–∏—Ñ—Ç–∞: {e}")
                    pdfmetrics.registerFont(TTFont('Arial', 'Helvetica'))

            doc = SimpleDocTemplate(
                file_path,
                pagesize=letter,
                rightMargin=30,
                leftMargin=30,
                topMargin=30,
                bottomMargin=30
            )

            elements = []
            styles = getSampleStyleSheet()

            # –°–æ–∑–¥–∞–µ–º —Å—Ç–∏–ª–∏
            title_style = ParagraphStyle(
                'CustomTitle',
                parent=styles['Heading1'],
                fontSize=16,
                spaceAfter=30,
                alignment=1,
                fontName='Arial'
            )

            normal_style = ParagraphStyle(
                'CustomNormal',
                parent=styles['Normal'],
                fontSize=12,
                fontName='Arial'
            )

            # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏
            elements.append(Paragraph("–ö–≤–∏—Ç–∞–Ω—Ü–∏—è –æ–± –æ–ø–ª–∞—Ç–µ", title_style))
            elements.append(Spacer(1, 20))

            # –î–∞–Ω–Ω—ã–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏
            receipt_data = [
                ["–ù–æ–º–µ—Ä –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏:", datetime.now().strftime('%Y%m%d%H%M%S')],
                ["–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:", str(order_data['id'])],
                ["–î–∞—Ç–∞:", datetime.now().strftime('%d.%m.%Y %H:%M')],
                ["–§–ò–û –∫–ª–∏–µ–Ω—Ç–∞:", order_data['fio']],
                ["–ì—Ä—É–ø–ø–∞:", order_data['group']],
                ["–¢–µ–ª–µ—Ñ–æ–Ω:", order_data['phone'] or "–ù–µ —É–∫–∞–∑–∞–Ω"],
                ["–¢–µ–º–∞:", order_data['theme'] or "–ù–µ —É–∫–∞–∑–∞–Ω–æ"],
                ["–£—Å–ª—É–≥–∞:", order_data['service']],
                ["–°—Ç–æ–∏–º–æ—Å—Ç—å:", f"{order_data['cost']:,.2f} ‚ÇΩ" if order_data['cost'] else "0.00 ‚ÇΩ"],
                ["–û–ø–ª–∞—á–µ–Ω–æ:", f"{order_data['paid_amount']:,.2f} ‚ÇΩ" if order_data['paid_amount'] else "0.00 ‚ÇΩ"],
                ["–û—Å—Ç–∞—Ç–æ–∫:",
                 f"{order_data['remaining_amount']:,.2f} ‚ÇΩ" if order_data['remaining_amount'] else "0.00 ‚ÇΩ"],
                ["–°—Ç–∞—Ç—É—Å:", order_data['status']]
            ]

            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏
            table = Table(receipt_data, colWidths=[150, 300])
            table.setStyle(TableStyle([
                ('ALIGN', (0, 0), (-1, -1), 'LEFT'),
                ('FONTNAME', (0, 0), (-1, -1), 'Arial'),
                ('FONTSIZE', (0, 0), (-1, -1), 12),
                ('BOTTOMPADDING', (0, 0), (-1, -1), 12),
                ('TEXTCOLOR', (0, 0), (-1, -1), colors.black),
                ('GRID', (0, 0), (-1, -1), 1, colors.black),
                ('BACKGROUND', (0, 0), (0, -1), colors.lightgrey),
            ]))

            elements.append(table)
            elements.append(Spacer(1, 40))

            # –ü–æ–¥–ø–∏—Å—å
            signature_data = [
                ["–ü–æ–¥–ø–∏—Å—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞:", "_________________"],
                ["–ü–æ–¥–ø–∏—Å—å –∫–ª–∏–µ–Ω—Ç–∞:", "_________________"]
            ]
            signature_table = Table(signature_data, colWidths=[150, 300])
            signature_table.setStyle(TableStyle([
                ('ALIGN', (0, 0), (-1, -1), 'LEFT'),
                ('FONTNAME', (0, 0), (-1, -1), 'Arial'),
                ('FONTSIZE', (0, 0), (-1, -1), 12),
                ('BOTTOMPADDING', (0, 0), (-1, -1), 20),
            ]))
            elements.append(signature_table)

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏
            company_style = ParagraphStyle(
                'Company',
                parent=styles['Normal'],
                fontSize=14,
                alignment=1,
                spaceAfter=10,
                fontName='Arial'
            )

            elements.append(Spacer(1, 20))
            elements.append(Paragraph("-" * 100, company_style))
            elements.append(Spacer(1, 20))

            elements.append(Paragraph("–û–û–û MPSP", company_style))
            elements.append(Paragraph("WhatsApp: +79066322571", company_style))
            elements.append(Paragraph("–î–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞: +79066322571 –°–±–µ—Ä–±–∞–Ω–∫", company_style))

            # –°—Ç—Ä–æ–∏–º –¥–æ–∫—É–º–µ–Ω—Ç
            doc.build(elements)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω
            if not os.path.exists(file_path):
                raise FileNotFoundError(f"–§–∞–π–ª {file_path} –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω")

            QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–ö–≤–∏—Ç–∞–Ω—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")

        except Exception as e:
            error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏: {str(e)}"
            print(error_msg)  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", error_msg)




