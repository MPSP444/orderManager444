from PyQt5.QtWidgets import (QMainWindow, QWidget, QVBoxLayout, QHBoxLayout,
                             QTabWidget, QPushButton, QLabel, QTreeWidget,
                             QTreeWidgetItem, QSpinBox,QComboBox,QGroupBox,QTextEdit, QSplitter)
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QIcon, QFont
from core.database import init_database, Order
from PyQt5.QtWidgets import (QMainWindow, QWidget, QVBoxLayout, QHBoxLayout,
                             QTabWidget, QLabel, QTreeWidget, QTreeWidgetItem,
                             QTextEdit, QSplitter, QGroupBox, QSpinBox,
                             QComboBox, QMessageBox, QInputDialog, QLineEdit,
                             QPushButton, QApplication)
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QFont
from urllib.parse import quote
import webbrowser

class ServiceCatalogWindow(QMainWindow):
    """–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ —É—Å–ª—É–≥ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""

    def __init__(self, parent=None):
        super().__init__(parent)
        self.session = init_database()
        self.initUI()

    def initUI(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        self.setWindowTitle("üìö –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —É—Å–ª—É–≥ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞")
        self.setGeometry(100, 100, 1200, 800)

        # –°–æ–∑–¥–∞–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        main_layout = QVBoxLayout(central_widget)

        # –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏
        self.tabs = QTabWidget()

        # –í–∫–ª–∞–¥–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ —É—Å–ª—É–≥
        services_tab = self.createServicesTab()
        self.tabs.addTab(services_tab, "üìã –ö–∞—Ç–∞–ª–æ–≥ —É—Å–ª—É–≥")

        # –í–∫–ª–∞–¥–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
        analytics_tab = self.createAnalyticsTab()
        self.tabs.addTab(analytics_tab, "üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤")

        # –í–∫–ª–∞–¥–∫–∞ –¥–æ–≥–æ–≤–æ—Ä–æ–≤
        contracts_tab = self.createContractsTab()
        self.tabs.addTab(contracts_tab, "üìÑ –î–æ–≥–æ–≤–æ—Ä—ã –∏ —à–∞–±–ª–æ–Ω—ã")

        main_layout.addWidget(self.tabs)

        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å–±–∞—Ä
        self.statusBar().showMessage('–ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ')

        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏
        self.setStyleSheet("""
            QMainWindow {
                background-color: #f5f5f5;
            }
            QTabWidget::pane {
                border: 1px solid #ddd;
                border-radius: 4px;
                background: white;
            }
            QTabBar::tab {
                background-color: #f8f9fa;
                padding: 8px 16px;
                margin: 2px;
                border: 1px solid #ddd;
                border-radius: 4px;
            }
            QTabBar::tab:selected {
                background-color: white;
                border-bottom: 2px solid #2196F3;
            }
            QTreeWidget {
                border: 1px solid #ddd;
                border-radius: 4px;
            }
            QSplitter::handle {
                background-color: #ddd;
            }
        """)

    def createServicesTab(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ —É—Å–ª—É–≥"""
        widget = QWidget()
        layout = QHBoxLayout(widget)

        # –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –¥–ª—è –¥–µ—Ä–µ–≤–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        splitter = QSplitter(Qt.Horizontal)

        # –õ–µ–≤–∞—è —á–∞—Å—Ç—å - –¥–µ—Ä–µ–≤–æ —É—Å–ª—É–≥
        services_tree = QTreeWidget()
        services_tree.setHeaderLabel("–£—Å–ª—É–≥–∏")
        services_tree.setMinimumWidth(250)
        services_tree.setStyleSheet("""
            QTreeWidget {
                border: 1px solid #ddd;
                border-radius: 4px;
                background: white;
            }
            QTreeWidget::item {
                padding: 5px;
            }
            QTreeWidget::item:hover {
                background: #f5f5f5;
            }
            QTreeWidget::item:selected {
                background: #e3f2fd;
                color: black;
            }
        """)

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É—Å–ª—É–≥
        categories = {
            "–ö—É—Ä—Å–æ–≤—ã–µ —Ä–∞–±–æ—Ç—ã": {
                "icon": "üìö",
                "subcategories": {
                    "–≠–∫–æ–Ω–æ–º–∏–∫–∞": "üí∞",
                    "–ü—Ä–∞–≤–æ": "‚öñÔ∏è",
                    "IT": "üíª",
                    "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥": "üìä",
                    "–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç": "üìà"
                }
            },
            "–î–∏–ø–ª–æ–º–Ω—ã–µ —Ä–∞–±–æ—Ç—ã": {
                "icon": "üéì",
                "subcategories": {
                    "–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç": "üìë",
                    "–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞": "üìã"
                }
            },
            "–ü—Ä–∞–∫—Ç–∏–∫–∞": {
                "icon": "‚úçÔ∏è",
                "subcategories": {
                    "–û—Ç—á–µ—Ç—ã": "üìù",
                    "–î–Ω–µ–≤–Ω–∏–∫–∏": "üìì"
                }
            },
            "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏": {
                "icon": "üí°",
                "subcategories": {
                    "–û–Ω–ª–∞–π–Ω": "üñ•Ô∏è",
                    "–û—á–Ω—ã–µ": "üë•"
                }
            }
        }

        for category, data in categories.items():
            cat_item = QTreeWidgetItem([f"{data['icon']} {category}"])
            for subcat, icon in data['subcategories'].items():
                subcat_item = QTreeWidgetItem([f"{icon} {subcat}"])
                cat_item.addChild(subcat_item)
            services_tree.addTopLevelItem(cat_item)

        services_tree.expandAll()

        # –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å–ª—É–≥–µ
        info_widget = QWidget()
        info_layout = QVBoxLayout(info_widget)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QLabel("–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É –∏–∑ —Å–ø–∏—Å–∫–∞")
        title_label.setFont(QFont("Arial", 14, QFont.Bold))
        title_label.setStyleSheet("color: #2196F3;")
        info_layout.addWidget(title_label)

        # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        info_group = QGroupBox("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å–ª—É–≥–µ")
        info_group_layout = QVBoxLayout(info_group)

        service_info = QTextEdit()
        service_info.setReadOnly(True)
        service_info.setStyleSheet("""
            QTextEdit {
                border: 1px solid #ddd;
                border-radius: 4px;
                background: white;
                padding: 10px;
            }
        """)
        info_group_layout.addWidget(service_info)

        info_layout.addWidget(info_group)

        # –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏
        calc_group = QGroupBox("–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏")
        calc_layout = QVBoxLayout(calc_group)

        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
        pages_layout = QHBoxLayout()
        pages_layout.addWidget(QLabel("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü:"))
        pages_spin = QSpinBox()
        pages_spin.setMinimum(1)
        pages_spin.setMaximum(500)
        pages_spin.setValue(20)
        pages_layout.addWidget(pages_spin)
        calc_layout.addLayout(pages_layout)

        # –°—Ä–æ—á–Ω–æ—Å—Ç—å
        urgency_layout = QHBoxLayout()
        urgency_layout.addWidget(QLabel("–°—Ä–æ—á–Ω–æ—Å—Ç—å:"))
        urgency_combo = QComboBox()
        urgency_combo.addItems([
            "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è",
            "–°—Ä–æ—á–Ω–æ (+30%)",
            "–û—á–µ–Ω—å —Å—Ä–æ—á–Ω–æ (+50%)"
        ])
        urgency_layout.addWidget(urgency_combo)
        calc_layout.addLayout(urgency_layout)

        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
        total_cost = QLabel("–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: 0 ‚ÇΩ")
        total_cost.setFont(QFont("Arial", 12, QFont.Bold))
        total_cost.setStyleSheet("color: #2196F3;")
        calc_layout.addWidget(total_cost)

        info_layout.addWidget(calc_group)

        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        buttons_layout = QHBoxLayout()

        share_btn = QPushButton("üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è")
        share_btn.setStyleSheet("""
            QPushButton {
                background-color: #2196F3;
                color: white;
                border: none;
                padding: 8px 16px;
                border-radius: 4px;
                font-weight: bold;
            }
            QPushButton:hover {
                background-color: #1976D2;
            }
        """)

        whatsapp_btn = QPushButton("üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ WhatsApp")
        whatsapp_btn.setStyleSheet("""
            QPushButton {
                background-color: #4CAF50;
                color: white;
                border: none;
                padding: 8px 16px;
                border-radius: 4px;
                font-weight: bold;
            }
            QPushButton:hover {
                background-color: #388E3C;
            }
        """)

        order_btn = QPushButton("üìù –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑")
        order_btn.setStyleSheet("""
            QPushButton {
                background-color: #FF9800;
                color: white;
                border: none;
                padding: 8px 16px;
                border-radius: 4px;
                font-weight: bold;
            }
            QPushButton:hover {
                background-color: #F57C00;
            }
        """)

        buttons_layout.addWidget(share_btn)
        buttons_layout.addWidget(whatsapp_btn)
        buttons_layout.addWidget(order_btn)

        info_layout.addLayout(buttons_layout)

        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –≤ —Å–ø–ª–∏—Ç—Ç–µ—Ä
        splitter.addWidget(services_tree)
        splitter.addWidget(info_widget)
        splitter.setStretchFactor(1, 2)

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã
        services_tree.itemClicked.connect(self.on_service_selected)
        pages_spin.valueChanged.connect(self.calculate_cost)
        urgency_combo.currentTextChanged.connect(self.calculate_cost)

        share_btn.clicked.connect(self.share_service)
        whatsapp_btn.clicked.connect(self.send_to_whatsapp)
        order_btn.clicked.connect(self.create_order)
        self.service_info = service_info
        self.title_label = title_label
        self.pages_spin = pages_spin
        self.urgency_combo = urgency_combo
        self.total_cost = total_cost
        layout.addWidget(splitter)
        return widget

    def share_service(self):
        """–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞"""
        if not hasattr(self, 'title_label') or not self.title_label.text():
            QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É")
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        text = f"""
    üìã {self.title_label.text()}

    üìù –û–ü–ò–°–ê–ù–ò–ï –£–°–õ–£–ì–ò:
    {self.service_info.toPlainText().strip()}

    üí∞ –°–¢–û–ò–ú–û–°–¢–¨:
    {self.total_cost.text()}

    üìÖ –°–†–û–ö–ò –í–´–ü–û–õ–ù–ï–ù–ò–Ø:
    ‚Ä¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π: 7 –¥–Ω–µ–π
    ‚Ä¢ –°—Ä–æ—á–Ω—ã–π: 3-5 –¥–Ω–µ–π
    ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π: 14 –¥–Ω–µ–π

    üìû –ö–û–ù–¢–ê–ö–¢–´:
    ‚Ä¢ –¢–µ–ª/WhatsApp: +7 906 632-25-71
    ‚Ä¢ Email: Mukam1@list.ru

    ‚úÖ –ì–æ—Ç–æ–≤—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã!"""

        # –ö–æ–ø–∏—Ä—É–µ–º –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
        QApplication.clipboard().setText(text)
        QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞")

    def send_to_whatsapp(self):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ WhatsApp"""
        if not hasattr(self, 'title_label') or not self.title_label.text():
            QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É")
            return

        phone_input, ok = QInputDialog.getText(
            self,
            '–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ WhatsApp',
            '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:',
            QLineEdit.Normal,
            '+7'
        )

        if ok and phone_input:
            # –û—á–∏—â–∞–µ–º –Ω–æ–º–µ—Ä –æ—Ç –≤—Å–µ–≥–æ, –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä
            phone = ''.join(filter(str.isdigit, phone_input))
            if not phone.startswith('7'):
                phone = '7' + phone

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = f"""–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üëã

    üìã {self.title_label.text()}

    üìù –û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏:
    {self.service_info.toPlainText().strip()}

    üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å:
    {self.total_cost.text()}

    ‚úÖ –ì–æ—Ç–æ–≤—ã –æ–±—Å—É–¥–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞!

    üìû –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏:
    ‚Ä¢ –¢–µ–ª/WhatsApp: +7 906 632-25-71
    ‚Ä¢ Email: Mukam1@list.ru"""

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ WhatsApp
            import webbrowser
            from urllib.parse import quote
            url = f"https://wa.me/{phone}?text={quote(message)}"
            webbrowser.open(url)

    def create_order(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞"""
        if not hasattr(self, 'title_label') or not self.title_label.text():
            QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É")
            return

        try:
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
            from ui.windows.new_order_window import NewOrderWindow
            dialog = NewOrderWindow(self)

            # –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è
            dialog.services_combo.setCurrentText(self.title_label.text())

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
            if hasattr(self, 'pages_spin'):
                dialog.quantity_spin.setValue(self.pages_spin.value())

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å
            try:
                cost_text = self.total_cost.text()
                cost = float(''.join(filter(str.isdigit, cost_text)))
                dialog.cost_spin.setValue(cost)
            except:
                pass

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ä–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ä–æ—á–Ω–æ—Å—Ç–∏
            if hasattr(self, 'urgency_combo'):
                urgency = self.urgency_combo.currentText()
                if "–û—á–µ–Ω—å —Å—Ä–æ—á–Ω–æ" in urgency:
                    dialog.deadline_combo.setCurrentText("3 –¥–Ω—è")
                elif "–°—Ä–æ—á–Ω–æ" in urgency:
                    dialog.deadline_combo.setCurrentText("5 –¥–Ω–µ–π")
                else:
                    dialog.deadline_combo.setCurrentText("7 –¥–Ω–µ–π")

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
            dialog.exec_()

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: {e}")  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: {str(e)}")
    def on_service_selected(self, item, column):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥–∏"""
        # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —É—Å–ª—É–≥–µ
        path = []
        current = item
        while current:
            path.insert(0, current.text(0))
            current = current.parent()

        # –ü–æ–ª—É—á–∞–µ–º —á–∏—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏ (–±–µ–∑ —ç–º–æ–¥–∑–∏)
        service_name = ' ‚Üí '.join([p.split(' ', 1)[1] if ' ' in p else p for p in path])

        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        self.title_label.setText(service_name)

        # –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–Ω–µ—á–Ω–∞—è —É—Å–ª—É–≥–∞ (–Ω–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è)
        if item.parent():
            category = item.parent().text(0).split(' ', 1)[1]  # –£–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏
            subcategory = item.text(0).split(' ', 1)[1]  # –£–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏

            # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Å–ª—É–≥–µ
            info = f"""
            <h3>üìù –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h3>
            <ul>
                <li>–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}</li>
                <li>–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {subcategory}</li>
                <li>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ: –ø–æ –ì–û–°–¢</li>
                <li>–£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å: –æ—Ç 70%</li>
            </ul>

            <h3>üìö –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</h3>
            <ul>
                <li>–¢–∏—Ç—É–ª—å–Ω—ã–π –ª–∏—Å—Ç</li>
                <li>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ</li>
                <li>–í–≤–µ–¥–µ–Ω–∏–µ</li>
                <li>–û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å</li>
                <li>–ó–∞–∫–ª—é—á–µ–Ω–∏–µ</li>
                <li>–°–ø–∏—Å–æ–∫ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã</li>
            </ul>

            <h3>‚è±Ô∏è –°—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</h3>
            <ul>
                <li>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π: 3-5 –¥–Ω–µ–π</li>
                <li>–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π: 7-10 –¥–Ω–µ–π</li>
                <li>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π: 14 –¥–Ω–µ–π</li>
            </ul>
            """

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ä–∞–±–æ—Ç—ã
            if "–ö—É—Ä—Å–æ–≤–∞—è" in category:
                self.pages_spin.setMinimum(20)
                self.pages_spin.setMaximum(60)
                self.pages_spin.setValue(30)
            elif "–î–∏–ø–ª–æ–º" in category:
                self.pages_spin.setMinimum(50)
                self.pages_spin.setMaximum(150)
                self.pages_spin.setValue(70)
            elif "–ü—Ä–∞–∫—Ç–∏–∫–∞" in category:
                self.pages_spin.setMinimum(15)
                self.pages_spin.setMaximum(40)
                self.pages_spin.setValue(20)

            self.service_info.setHtml(info)
            self.calculate_cost()
        else:
            # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è
            self.service_info.setHtml(f"""
            <h2>{item.text(0)}</h2>
            <p>–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —É—Å–ª—É–≥—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.</p>
            """)

    def calculate_cost(self):
        """–†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏"""
        try:
            if not hasattr(self, 'pages_spin') or not hasattr(self, 'urgency_combo'):
                return

            # –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
            base_per_page = 150  # –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
            pages = self.pages_spin.value()

            # –ù–∞—Ü–µ–Ω–∫–∞ –∑–∞ —Å—Ä–æ—á–Ω–æ—Å—Ç—å
            urgency_multiplier = 1.0
            urgency = self.urgency_combo.currentText()
            if "–°—Ä–æ—á–Ω–æ" in urgency:
                urgency_multiplier = 1.3
            elif "–û—á–µ–Ω—å —Å—Ä–æ—á–Ω–æ" in urgency:
                urgency_multiplier = 1.5

            # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ä–∞–±–æ—Ç—ã
            min_cost = 2000  # –ë–∞–∑–æ–≤–∞—è –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å

            # –†–∞—Å—á–µ—Ç –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
            total = max(min_cost, pages * base_per_page) * urgency_multiplier

            # –û–±–Ω–æ–≤–ª—è–µ–º label
            self.total_cost.setText(f"–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {total:,.0f} ‚ÇΩ")

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏: {e}")
            self.total_cost.setText("–û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞")
    def createAnalyticsTab(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤"""
        from .analytics_tab import ClientAnalyticsTab
        return ClientAnalyticsTab(self)

    def createContractsTab(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –¥–æ–≥–æ–≤–æ—Ä–æ–≤"""
        from .contracts_tab import ContractsTab
        return ContractsTab(self)

    def onServiceSelected(self, item, column):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥–∏ –≤ –¥–µ—Ä–µ–≤–µ"""
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —É—Å–ª—É–≥–µ
        path = []
        current = item
        while current:
            path.insert(0, current.text(0))
            current = current.parent()

        service_path = " -> ".join(path)

        # –ü—Ä–∏–º–µ—Ä –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        if not item.parent():  # –ï—Å–ª–∏ —ç—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è
            info = f"""
            <h2>{item.text(0)}</h2>
            <p>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.</p>
            """
        else:  # –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —É—Å–ª—É–≥–∞
            info = f"""
            <h2>{service_path}</h2>
            <hr>
            <h3>üìù –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
            <ul>
                <li>–û–±—ä–µ–º: 20-60 —Å—Ç—Ä–∞–Ω–∏—Ü</li>
                <li>–£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å: –æ—Ç 70%</li>
                <li>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ: –ø–æ –ì–û–°–¢</li>
            </ul>
            <h3>üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å</h3>
            <ul>
                <li>–ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞: –æ—Ç 2000‚ÇΩ</li>
                <li>–ó–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É: 150‚ÇΩ</li>
                <li>–°—Ä–æ—á–Ω–æ—Å—Ç—å: +50%</li>
            </ul>
            <h3>‚è±Ô∏è –°—Ä–æ–∫–∏</h3>
            <ul>
                <li>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π: 3 –¥–Ω—è</li>
                <li>–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π: 7 –¥–Ω–µ–π</li>
                <li>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π: 14 –¥–Ω–µ–π</li>
            </ul>
            """

        self.service_info.setHtml(info)