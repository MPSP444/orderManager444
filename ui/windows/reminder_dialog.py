from PyQt5.QtWidgets import (QDialog, QVBoxLayout, QHBoxLayout, QPushButton,
                             QLabel, QComboBox, QMessageBox, QSpacerItem,
                             QSizePolicy, QTextEdit)
from PyQt5.QtCore import Qt, QDateTime, QUrl, QSettings
from PyQt5.QtGui import QDesktopServices
from datetime import datetime, timedelta
import re
from urllib.parse import quote


class ReminderDialog(QDialog):
    def __init__(self, order_data, parent=None):
        super().__init__(parent)
        self.order_data = order_data
        self.settings = QSettings('MPSP', 'OrderReminders')
        self.setup_ui()

    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–∏–∞–ª–æ–≥–∞"""
        self.setWindowTitle("–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ")
        self.setMinimumWidth(500)

        layout = QVBoxLayout(self)

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ
        info_text = (
            f"<h3>–ó–∞–∫–∞–∑ #{self.order_data['id']}</h3>"
            f"<p><b>–ö–ª–∏–µ–Ω—Ç:</b> {self.order_data['fio']}</p>"
            f"<p><b>–£—Å–ª—É–≥–∞:</b> {self.order_data['service']}</p>"
            f"<p><b>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</b> {self.order_data['created_date'].strftime('%d.%m.%Y')}</p>"
            f"<p><b>–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ:</b> {self.order_data['remaining_amount']:,.2f} ‚ÇΩ</p>"
        )
        info_label = QLabel(info_text)
        info_label.setTextFormat(Qt.RichText)
        layout.addWidget(info_label)

        # –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
        message_label = QLabel("–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:")
        layout.addWidget(message_label)

        self.message_edit = QTextEdit()
        self.message_edit.setPlainText(self.get_default_message())
        self.message_edit.setMinimumHeight(150)
        layout.addWidget(self.message_edit)

        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        buttons_layout = QHBoxLayout()

        # WhatsApp
        whatsapp_btn = QPushButton("üì± –ù–∞–ø–∏—Å–∞—Ç—å –≤ WhatsApp")
        whatsapp_btn.clicked.connect(self.send_whatsapp)
        whatsapp_btn.setStyleSheet("""
            QPushButton {
                background-color: #25D366;
                color: white;
                border: none;
                padding: 8px 16px;
                border-radius: 4px;
            }
            QPushButton:hover {
                background-color: #128C7E;
            }
        """)

        # –ù–∞–ø–æ–º–Ω–∏—Ç—å –ø–æ–∑–∂–µ
        self.remind_later_combo = QComboBox()
        self.remind_later_combo.addItems([
            "–ß–µ—Ä–µ–∑ —á–∞—Å",
            "–ß–µ—Ä–µ–∑ –¥–µ–Ω—å",
            "–ß–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é",
            "–í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É"
        ])

        remind_later_btn = QPushButton("‚è∞ –ù–∞–ø–æ–º–Ω–∏—Ç—å –ø–æ–∑–∂–µ")
        remind_later_btn.clicked.connect(self.remind_later)
        remind_later_btn.setStyleSheet("""
            QPushButton {
                background-color: #2196F3;
                color: white;
                border: none;
                padding: 8px 16px;
                border-radius: 4px;
            }
            QPushButton:hover {
                background-color: #1976D2;
            }
        """)

        # –ë–æ–ª—å—à–µ –Ω–µ –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å
        dont_remind_btn = QPushButton("üîï –ë–æ–ª—å—à–µ –Ω–µ –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å")
        dont_remind_btn.clicked.connect(self.dont_remind)
        dont_remind_btn.setStyleSheet("""
            QPushButton {
                background-color: #F44336;
                color: white;
                border: none;
                padding: 8px 16px;
                border-radius: 4px;
            }
            QPushButton:hover {
                background-color: #D32F2F;
            }
        """)

        # –ó–∞–∫—Ä—ã—Ç—å
        close_btn = QPushButton("‚ùå –ó–∞–∫—Ä—ã—Ç—å")
        close_btn.clicked.connect(self.close)
        close_btn.setStyleSheet("""
            QPushButton {
                background-color: #757575;
                color: white;
                border: none;
                padding: 8px 16px;
                border-radius: 4px;
            }
            QPushButton:hover {
                background-color: #616161;
            }
        """)

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ layout
        buttons_layout.addWidget(whatsapp_btn)
        buttons_layout.addWidget(self.remind_later_combo)
        buttons_layout.addWidget(remind_later_btn)
        buttons_layout.addWidget(dont_remind_btn)
        buttons_layout.addWidget(close_btn)

        layout.addLayout(buttons_layout)

    def get_default_message(self):
        """–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
        return (
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {self.order_data['fio']}!\n\n"
            f"–£ –≤–∞—Å –µ—Å—Ç—å –∑–∞–∫–∞–∑ #{self.order_data['id']} –æ—Ç "
            f"{self.order_data['created_date'].strftime('%d.%m.%Y')} - "
            f"{self.order_data['service']}.\n"
            f"–•–æ—Ç–µ–ª–∏ —É—Ç–æ—á–Ω–∏—Ç—å, –∞–∫—Ç—É–∞–ª–µ–Ω –ª–∏ –µ—â–µ –¥–∞–Ω–Ω—ã–π –∑–∞–∫–∞–∑?\n\n"
            f"–ï—Å–ª–∏ –¥–∞, —Ç–æ –Ω–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤–Ω–µ—Å–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã.\n"
            f"–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {self.order_data['remaining_amount']:,.2f} ‚ÇΩ\n\n"
            f"–î–ª—è –æ–ø–ª–∞—Ç—ã:\n"
            f"üí≥ –°–±–µ—Ä–±–∞–Ω–∫: +79066322571\n"
            f"üì± WhatsApp: +79066322571"
        )

    def send_whatsapp(self):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ WhatsApp"""
        try:
            if not self.order_data.get('phone'):
                QMessageBox.warning(self, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ",
                                    "–£ –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!")
                return

            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            phone = re.sub(r'[^\d]', '', self.order_data['phone'])
            if phone.startswith('8'):
                phone = '7' + phone[1:]
            elif not phone.startswith('7'):
                phone = '7' + phone

            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
            message = self.message_edit.toPlainText()

            # –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è WhatsApp
            url = f"https://wa.me/{phone}?text={quote(message)}"

            # –û—Ç–∫—Ä—ã–≤–∞–µ–º WhatsApp
            QDesktopServices.openUrl(QUrl(url))

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–∏
            self.save_reminder_info('whatsapp_sent')

            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
            self.accept()

        except Exception as e:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞",
                                 f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}")

    def remind_later(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–ù–∞–ø–æ–º–Ω–∏—Ç—å –ø–æ–∑–∂–µ'"""
        try:
            option = self.remind_later_combo.currentText()
            now = datetime.now()

            if option == "–ß–µ—Ä–µ–∑ —á–∞—Å":
                next_reminder = now + timedelta(hours=1)
            elif option == "–ß–µ—Ä–µ–∑ –¥–µ–Ω—å":
                next_reminder = now + timedelta(days=1)
            elif option == "–ß–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é":
                next_reminder = now + timedelta(weeks=1)
            else:
                # TODO: –î–æ–±–∞–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã
                next_reminder = now + timedelta(days=1)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
            self.save_reminder_info('postponed', next_reminder)

            QMessageBox.information(
                self,
                "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ª–æ–∂–µ–Ω–æ",
                f"–°–ª–µ–¥—É—é—â–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {next_reminder.strftime('%d.%m.%Y %H:%M')}"
            )

            self.accept()

        except Exception as e:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞",
                                 f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: {str(e)}")

    def dont_remind(self):
        """–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞"""
        try:
            reply = QMessageBox.question(
                self,
                "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ",
                f"–û—Ç–∫–ª—é—á–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ {self.order_data['fio']}?\n"
                "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.",
                QMessageBox.Yes | QMessageBox.No,
                QMessageBox.No
            )

            if reply == QMessageBox.Yes:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
                self.save_reminder_info('disabled')
                self.accept()

        except Exception as e:
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞",
                                 f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π: {str(e)}")

    def save_reminder_info(self, action, next_reminder=None):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–∏"""
        try:
            client_key = f"client_{self.order_data['fio']}"
            order_key = f"order_{self.order_data['id']}"

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–µ–π—Å—Ç–≤–∏–∏
            self.settings.setValue(f"{order_key}/last_action", action)
            self.settings.setValue(f"{order_key}/last_action_date",
                                   datetime.now().strftime('%Y-%m-%d %H:%M:%S'))

            if action == 'disabled':
                # –û—Ç–∫–ª—é—á–∞–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
                self.settings.setValue(f"{client_key}/reminders_disabled", True)

            elif action == 'postponed' and next_reminder:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
                self.settings.setValue(
                    f"{order_key}/next_reminder",
                    next_reminder.strftime('%Y-%m-%d %H:%M:%S')
                )

            self.settings.sync()

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")